#! /usr/bin/env python
#*
#*  Copyright (c) 2010, Jack O'Quin
#*  All rights reserved.
#*
#*  Redistribution and use in source and binary forms, with or without
#*  modification, are permitted provided that the following conditions
#*  are met:
#*
#*   * Redistributions of source code must retain the above copyright
#*     notice, this list of conditions and the following disclaimer.
#*   * Redistributions in binary form must reproduce the above
#*     copyright notice, this list of conditions and the following
#*     disclaimer in the documentation and/or other materials provided
#*     with the distribution.
#*   * Neither the name of the author nor the names of other
#*     contributors may be used to endorse or promote products derived
#*     from this software without specific prior written permission.
#*
#*  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
#*  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
#*  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
#*  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
#*  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
#*  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
#*  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
#*  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
#*  CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
#*  LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
#*  ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
#*  POSSIBILITY OF SUCH DAMAGE.
#***********************************************************

# 1394 camera dynamic configuration

PACKAGE='camera1394'
import roslib; roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator import *
from driver_base.msg import SensorLevels



gen = ParameterGenerator()

#       Name, Type, Reconfiguration level, Description, Default, Min, Max

gen.add("guid", str_t, SensorLevels.RECONFIGURE_CLOSE,
        "Global unique ID of camera.", "")

gen.add("camera_name", str_t, SensorLevels.RECONFIGURE_RUNNING,
        "Camera name.", "camera")

modes = gen.enum([gen.const("Format0_Mode1", str_t, "320x240_yuv422", ""),
                  gen.const("Format0_Mode3", str_t, "640x480_yuv422", ""),
                  gen.const("Format0_Mode4", str_t, "640x480_rgb", ""),
                  gen.const("Format0_Mode5", str_t, "640x480_mono", ""),
                  gen.const("Format1_Mode0", str_t, "800x600_yuv422", ""),
                  gen.const("Format1_Mode2", str_t, "800x600_mono", ""),
                  gen.const("Format1_Mode3", str_t, "1024x768_yuv422", ""),
                  gen.const("Format1_Mode5", str_t, "1024x768_mono", ""),
                  gen.const("Format2_Mode0", str_t, "1280x960_yuv422", ""),
                  gen.const("Format2_Mode2", str_t, "1280x960_mono", "")],
                 "Video mode for camera.")

gen.add("video_mode", str_t, SensorLevels.RECONFIGURE_CLOSE,
        "DC1394 video mode.", "800x600_mono", edit_method = modes)

gen.add("frame_id", str_t, SensorLevels.RECONFIGURE_CLOSE,
        "ROS transform frame of reference ID.", "camera")

gen.add("fps", double_t, SensorLevels.RECONFIGURE_CLOSE,
        "Camera speed in frames per second.", 15.0, 1.875, 60.0)

gen.add("iso_speed", int_t, SensorLevels.RECONFIGURE_CLOSE,
        "IEEE 1394 bus speed in megabits per second.", 400, 100, 3200)

gen.add("camera_info_url", str_t, SensorLevels.RECONFIGURE_RUNNING,
        "Camera calibration URL.", "")

gen.add("encoding", str_t, SensorLevels.RECONFIGURE_RUNNING,
        "ROS image encoding.", "")

methods = gen.enum([gen.const("noMethod", str_t, "", "No Bayer in driver"),
                    gen.const("DownSample", str_t, "DownSample", ""),
                    gen.const("Simple", str_t, "Simple", ""),
                    gen.const("Bilinear", str_t, "Bilinear", ""),
                    gen.const("HQ", str_t, "HQ", ""),
                    gen.const("VNG", str_t, "VNG", ""),
                    gen.const("AHD", str_t, "AHD", "")],
                   "DC1394 Bayer methods (in driver).")

gen.add("bayer_method", str_t, SensorLevels.RECONFIGURE_CLOSE,
        "DC1394 Bayer method (done in the driver).", "", edit_method = methods)

patterns = gen.enum([gen.const("noPattern", str_t, "", "No Bayer in driver"),
                     gen.const("RGGB", str_t, "RGGB", ""),
                     gen.const("GBRG", str_t, "GBRG", ""),
                     gen.const("GRBG", str_t, "GRBG", ""),
                     gen.const("BGGR", str_t, "BGGR", "")],
                    "DC1394 Bayer patterns (in driver).")

gen.add("bayer_pattern", str_t, SensorLevels.RECONFIGURE_CLOSE,
        "DC1394 Bayer pattern (done in the driver).", "", edit_method = patterns)

gen.add("brightness", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "Camera brightness for automatic gain and exposure.", -1, -1, 9999)

gen.add("exposure", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "Exposure setting.", -1, -1, 9999)

gen.add("gain", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "Gain setting.", -1, -1, 9999)

gen.add("shutter", int_t, SensorLevels.RECONFIGURE_RUNNING,
        "Shutter setting.", -1, -1, 9999)

gen.add("whitebalance", str_t, SensorLevels.RECONFIGURE_RUNNING,
        "Blue/U and Red/V components of white balance.", "auto")

exit(gen.generate(PACKAGE, "Camera1394", "Camera1394"))
